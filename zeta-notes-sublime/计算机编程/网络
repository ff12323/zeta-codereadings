网络

shell脚本学习：

tools：
  ndisc6 、 seq 、 arping


 ip -6 neigh show dev <ethx> | grep -v "^fe80::" | awk -F ' lladdr ' '{print $2}'
  - IPv6链接本地地址（link-local address），这些地址不是真正的MAC地址。


${1%/*}和${1#*/}是Shell中的参数扩展，用于从命令行参数中提取特定的部分。
${1%/*}的含义是去掉参数$1中最后一个/及其后面的部分，即提取网络地址。
${1#*/}的含义是去掉参数$1中第一个/及其前面的部分，即提取子网掩码的长度。
   例如，如果命令行参数是192.168.1.0/24，那么${1%/*}的值将是192.168.1.0，${1#*/}的值将是24。

arp -n -i <intf>

echo "obase=16;${i}" | bc | tr A-Z a-z
 echo打印的内容，传入bc进行进制转换。


交换机策略路由有问题，是什么意思？
  策略路由典型配置： https://support.huawei.com/enterprise/zh/doc/EDOC1000069491/df424d7a
交换机： HUAWEI CE8850E

lspci -vnn



perftest:
  ib_write_bw 



socket编程：

epoll_create
eventfd
epoll_wait
/proc/sys/net/ipv4/ip_local_reserved_ports
FIONREAD
/proc/sys/net/ipv4/tcp_congestion_control: cubic

mount: /mnt/iso: WARNING: source write-protected, mounted read-only


/boot/grub2/grub.cfg 
/boot/efi/EFI

案例库： 《linux系统重启网卡后网络不通》
 https://support.huawei.com/enterprise/zh/knowledge/EKB1100073351


 arm堆栈展开失败：
  https://libunwind-devel.nongnu.narkive.com/nRZ7xotM/backtrace-from-signal-handler-on-arm-from-threads

  gdb堆栈展开失败：
使用bt查看，再第3个stack展开的时候卡在，
失败未知：__kernel_rt_sigreturn，linux-vdso.so.1
```
(gdb) disassemble 0xffff7ff428dc
Dump of assembler code for function __kernel_rt_sigreturn:
   0x0000ffff7ff428dc <+0>: mov x8, #0x8b                   // #139
   0x0000ffff7ff428e0 <+4>: svc #0x0
End of assembler dump.
```
卡死-死循环： 
1、CPU为Kunpeng 920B,支持SVE特性
2、core文件中 NOTE中没有 NT_ARM_SVE 信息，初始化加载core时标记了arch不支持SVE。
原因：
gdb解析[stack]中的信号信息时，死循环。 因为遇到SVE的魔术字，但是又判定arch不支持SVE, 没有调整section的位置
解决办法：
 1、修复gdb的死循环bug。不依赖bbox生成的sve信息了
 2、修复bbox生成core流程，到内核获取SVE寄存器信息


